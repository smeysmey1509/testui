(self["webpackChunkstorybook"] = self["webpackChunkstorybook"] || []).push([["SearchProduct-stories"],{

/***/ "./stories/SearchProduct.stories.js":
/*!******************************************!*\
  !*** ./stories/SearchProduct.stories.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   New: () => (/* binding */ New),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _SearchProduct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SearchProduct */ "./stories/SearchProduct.js");
/* harmony import */ var _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/testing-library */ "./node_modules/@storybook/testing-library/dist/index.mjs");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Component/SearchProduct",
  tags: ["autodocs"],
  parameters: {
    layout: "centered"
  },
  argTypes: {
    placeholder: {
      control: "text"
    },
    fontSize: {
      control: "text"
    },
    searchProductBackgroundColor: {
      control: "color"
    }
  }
});
const Default = {
  args: {
    placeholder: "Search here ...",
    fontSize: "12px",
    searchProductBackgroundColor: "#e1c8c8"
  },
  render: args => (0,_SearchProduct__WEBPACK_IMPORTED_MODULE_0__.createSearchProduct)(args),
  play: async ({
    canvasElement
  }) => {
    const canvas = (0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement);
    // Test the search functionality
    const searchInput = canvas.getByPlaceholderText("Search here ...");
    _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.type(searchInput, "Tesla");
    // Check if filtered products are displayed
    await new Promise(resolve => setTimeout(resolve, 1000));
    // Test the filter popup
    // Use querySelector to find the Font Awesome icon
    const filterIcon = canvasElement.querySelector(".fa-filter");
    // Ensure the filter icon is visible
    if (filterIcon) {
      _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(filterIcon);
      // Wait for the popup to be visible and contain brand options
      const teslaBrand = await canvas.findByText("Tesla");
      if (teslaBrand) {
        teslaBrand.click();
        // Wait for the products list to update
        const teslaModelS = await canvas.findByText("Tesla Model S");
        if (teslaModelS) {
          // Check if the Tesla Model S is in the document
          teslaModelS;
        }
        const fordMustang = canvas.queryByText("Ford Mustang");
        if (fordMustang) {
          // Ensure Ford Mustang is not in the document
          fordMustang;
        }
        // Clear filter
        const clearFilter = await canvas.findByText("Clear Filter");
        _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(clearFilter);
        // Wait for all products to be displayed again
        await canvas.findByText("Ford Mustang");
      }
    } else {
      throw new Error("Filter icon not found");
    }
  }
};
const New = {
  args: {
    placeholder: "Search here ...",
    fontSize: "17px",
    searchProductBackgroundColor: "#c22828"
  },
  render: args => (0,_SearchProduct__WEBPACK_IMPORTED_MODULE_0__.createSearchProduct)(args),
  play: async ({
    canvasElement
  }) => {
    const canvas = (0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.within)(canvasElement);
    const searchInput = canvas.getByPlaceholderText("Search here ...");
    _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.type(searchInput, "Tesla");
    await new Promise(resolve => setTimeout(resolve, 1000));
    const filterIcon = canvasElement.querySelector(".fa-filter");
    if (filterIcon) {
      _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(filterIcon);
      const teslaBrand = await canvas.findByText("Tesla");
      if (teslaBrand) {
        teslaBrand.click();
        const teslaModelS = await canvas.findByText("Tesla Model S");
        if (teslaModelS) {
          teslaModelS;
        }
        const fordMustang = canvas.queryByText("Ford Mustang");
        if (fordMustang) {
          fordMustang;
        }
        const clearFilter = await canvas.findByText("Clear Filter");
        _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.userEvent.click(clearFilter);
        await canvas.findByText("Ford Mustang");
      }
    } else {
      throw new Error("Filter icon not found");
    }
  }
};
;
const __namedExportsOrder = ["Default", "New"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    placeholder: \"Search here ...\",\n    fontSize: \"12px\",\n    searchProductBackgroundColor: \"#e1c8c8\"\n  },\n  render: args => createSearchProduct(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Test the search functionality\n    const searchInput = canvas.getByPlaceholderText(\"Search here ...\");\n    userEvent.type(searchInput, \"Tesla\");\n\n    // Check if filtered products are displayed\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Test the filter popup\n    // Use querySelector to find the Font Awesome icon\n    const filterIcon = canvasElement.querySelector(\".fa-filter\");\n\n    // Ensure the filter icon is visible\n    if (filterIcon) {\n      userEvent.click(filterIcon);\n\n      // Wait for the popup to be visible and contain brand options\n      const teslaBrand = await canvas.findByText(\"Tesla\");\n      if (teslaBrand) {\n        teslaBrand.click();\n\n        // Wait for the products list to update\n        const teslaModelS = await canvas.findByText(\"Tesla Model S\");\n        if (teslaModelS) {\n          // Check if the Tesla Model S is in the document\n          teslaModelS;\n        }\n        const fordMustang = canvas.queryByText(\"Ford Mustang\");\n        if (fordMustang) {\n          // Ensure Ford Mustang is not in the document\n          fordMustang;\n        }\n\n        // Clear filter\n        const clearFilter = await canvas.findByText(\"Clear Filter\");\n        userEvent.click(clearFilter);\n\n        // Wait for all products to be displayed again\n        await canvas.findByText(\"Ford Mustang\");\n      }\n    } else {\n      throw new Error(\"Filter icon not found\");\n    }\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
New.parameters = {
  ...New.parameters,
  docs: {
    ...New.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    placeholder: \"Search here ...\",\n    fontSize: \"17px\",\n    searchProductBackgroundColor: \"#c22828\"\n  },\n  render: args => createSearchProduct(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const searchInput = canvas.getByPlaceholderText(\"Search here ...\");\n    userEvent.type(searchInput, \"Tesla\");\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const filterIcon = canvasElement.querySelector(\".fa-filter\");\n    if (filterIcon) {\n      userEvent.click(filterIcon);\n      const teslaBrand = await canvas.findByText(\"Tesla\");\n      if (teslaBrand) {\n        teslaBrand.click();\n        const teslaModelS = await canvas.findByText(\"Tesla Model S\");\n        if (teslaModelS) {\n          teslaModelS;\n        }\n        const fordMustang = canvas.queryByText(\"Ford Mustang\");\n        if (fordMustang) {\n          fordMustang;\n        }\n        const clearFilter = await canvas.findByText(\"Clear Filter\");\n        userEvent.click(clearFilter);\n        await canvas.findByText(\"Ford Mustang\");\n      }\n    } else {\n      throw new Error(\"Filter icon not found\");\n    }\n  }\n}",
      ...New.parameters?.docs?.source
    }
  }
};

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./stories/searchProduct.css":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./stories/searchProduct.css ***!
  \*****************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/* searchProduct.css */

.search-product {
  width: 300px;
  margin: 20px auto;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  overflow: hidden;
  font-family: 'Arial', sans-serif;
}

.search {
  display: flex;
  align-items: center;
  background-color: #f4f4f4;
  padding: 10px;
  border-bottom: 1px solid #ccc;
  position: relative;
}

.search input {
  flex-grow: 1;
  padding: 10px;
  border-radius: 5px;
  transition: all 0.3s ease;
}

.search input:focus {
  border: 1px solid #00bfff;
  box-shadow: 0 0 5px rgba(0, 191, 255, 0.5);
}

.search .fa-filter {
  color: #555;
  cursor: pointer;
  margin-left: 10px;
  transition: transform 0.3s ease;
}

.search .fa-filter:hover {
  transform: rotate(90deg);
}

.filter-popup {
  position: absolute;
  top: 50px;
  right: 0;
  width: 200px;
  background-color: white;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  border-radius: 8px;
  z-index: 10;
  list-style: none;
  padding: 10px 0;
  margin: 0;
}

.filter-popup li {
  padding: 10px;
  transition: background-color 0.2s ease;
  cursor: pointer;
}

.filter-popup li:hover {
  background-color: #f0f0f0;
}

.list {
  max-height: 300px;
  overflow-y: auto;
  background-color: #fff;
}

.product-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.product-list li {
  padding: 10px 15px;
  border-bottom: 1px solid #ddd;
  transition: background-color 0.2s ease;
  cursor: pointer;
}

.product-list li:hover {
  background-color: #f7f7f7;
}

.product-list li:last-child {
  border-bottom: none;
}

`, "",{"version":3,"sources":["webpack://./stories/searchProduct.css"],"names":[],"mappings":"AAAA,sBAAsB;;AAEtB;EACE,YAAY;EACZ,iBAAiB;EACjB,mBAAmB;EACnB,wCAAwC;EACxC,gBAAgB;EAChB,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,yBAAyB;EACzB,aAAa;EACb,6BAA6B;EAC7B,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,0CAA0C;AAC5C;;AAEA;EACE,WAAW;EACX,eAAe;EACf,iBAAiB;EACjB,+BAA+B;AACjC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,YAAY;EACZ,uBAAuB;EACvB,0CAA0C;EAC1C,kBAAkB;EAClB,WAAW;EACX,gBAAgB;EAChB,eAAe;EACf,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,sCAAsC;EACtC,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,mBAAmB;AACrB","sourcesContent":["/* searchProduct.css */\r\n\r\n.search-product {\r\n  width: 300px;\r\n  margin: 20px auto;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  overflow: hidden;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.search {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f4f4f4;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  position: relative;\r\n}\r\n\r\n.search input {\r\n  flex-grow: 1;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.search input:focus {\r\n  border: 1px solid #00bfff;\r\n  box-shadow: 0 0 5px rgba(0, 191, 255, 0.5);\r\n}\r\n\r\n.search .fa-filter {\r\n  color: #555;\r\n  cursor: pointer;\r\n  margin-left: 10px;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.search .fa-filter:hover {\r\n  transform: rotate(90deg);\r\n}\r\n\r\n.filter-popup {\r\n  position: absolute;\r\n  top: 50px;\r\n  right: 0;\r\n  width: 200px;\r\n  background-color: white;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  border-radius: 8px;\r\n  z-index: 10;\r\n  list-style: none;\r\n  padding: 10px 0;\r\n  margin: 0;\r\n}\r\n\r\n.filter-popup li {\r\n  padding: 10px;\r\n  transition: background-color 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.filter-popup li:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.list {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  background-color: #fff;\r\n}\r\n\r\n.product-list {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.product-list li {\r\n  padding: 10px 15px;\r\n  border-bottom: 1px solid #ddd;\r\n  transition: background-color 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.product-list li:hover {\r\n  background-color: #f7f7f7;\r\n}\r\n\r\n.product-list li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./stories/searchProduct.css":
/*!***********************************!*\
  !*** ./stories/searchProduct.css ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./searchProduct.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./stories/searchProduct.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);


if (true) {
  if (!_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }
  var p;
  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (a[p] !== b[p]) {
      return false;
    }
  }
  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }
    if (!a[p]) {
      return false;
    }
  }
  return true;
};
    var isNamedExport = !_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;
    var oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

    module.hot.accept(
      /*! !!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./searchProduct.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./stories/searchProduct.css",
      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./searchProduct.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./stories/searchProduct.css");
(function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

              update(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"]);
      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}



       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_searchProduct_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./stories/SearchProduct.js":
/*!**********************************!*\
  !*** ./stories/SearchProduct.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSearchProduct: () => (/* binding */ createSearchProduct)
/* harmony export */ });
/* harmony import */ var _searchProduct_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./searchProduct.css */ "./stories/searchProduct.css");

const createSearchProduct = ({ placeholder, fontSize, searchProductBackgroundColor } = {})=>{
    const products = [
        {
            name: "Tesla Model S",
            brand: "Tesla"
        },
        {
            name: "Tesla Model 3",
            brand: "Tesla"
        },
        {
            name: "Ford Mustang",
            brand: "Ford"
        },
        {
            name: "Ford F-150",
            brand: "Ford"
        },
        {
            name: "Chevrolet Camaro",
            brand: "Chevrolet"
        },
        {
            name: "Chevrolet Malibu",
            brand: "Chevrolet"
        },
        {
            name: "BMW 3 Series",
            brand: "BMW"
        },
        {
            name: "BMW X3",
            brand: "BMW"
        },
        {
            name: "Audi A3",
            brand: "Audi"
        },
        {
            name: "Audi Q5",
            brand: "Audi"
        },
        {
            name: "Chevrolet Silverado",
            brand: "Chevrolet"
        },
        {
            name: "BMW 5 Series",
            brand: "BMW"
        },
        {
            name: "Ford Escape",
            brand: "Ford"
        },
        {
            name: "Audi A4",
            brand: "Audi"
        },
        {
            name: "Tesla Model Y",
            brand: "Tesla"
        },
        {
            name: "Ford Focus",
            brand: "Ford"
        },
        {
            name: "Chevrolet Equinox",
            brand: "Chevrolet"
        },
        {
            name: "BMW Z4",
            brand: "BMW"
        },
        {
            name: "Audi A6",
            brand: "Audi"
        },
        {
            name: "Tesla Roadster",
            brand: "Tesla"
        }
    ];
    const brands = [
        ...new Set(products.map((product)=>product.brand))
    ];
    const searchProduct = document.createElement("div");
    searchProduct.classList = "search-product";
    searchProduct.style.backgroundColor = searchProductBackgroundColor;
    const search = document.createElement("div");
    search.classList = "search";
    const searchInput = document.createElement("input");
    searchInput.type = "search";
    searchInput.placeholder = placeholder;
    searchInput.style.fontSize = fontSize;
    searchInput.style.outline = "none";
    searchInput.style.border = "none";
    const filterIcon = document.createElement("i");
    filterIcon.classList = "fa-solid fa-filter";
    const filterPopup = document.createElement("ul");
    filterPopup.classList = "filter-popup";
    filterPopup.style.display = "none"; // Initially hidden
    // Add Clear Filter option
    const clearFilterItem = document.createElement("li");
    clearFilterItem.textContent = "Clear Filter";
    clearFilterItem.style.fontWeight = "bold"; // Highlight Clear Filter
    clearFilterItem.style.cursor = "pointer"; // Indicate it's clickable
    filterPopup.appendChild(clearFilterItem);
    // Add brand filter options
    brands.forEach((brand)=>{
        const filterPopupItem = document.createElement("li");
        const brandTitle = document.createElement("span");
        brandTitle.textContent = brand;
        filterPopupItem.append(brandTitle);
        filterPopup.appendChild(filterPopupItem);
        // Add click event to filter by brand
        filterPopupItem.addEventListener("click", ()=>{
            searchInput.value = ""; // Clear search input when filtering by brand
            filterProductsByBrand(brand);
            filterPopup.style.display = "none"; // Hide popup after selecting brand
        });
    });
    // Add click event to clear the filter
    clearFilterItem.addEventListener("click", ()=>{
        searchInput.value = ""; // Clear search input
        filterProducts(); // Show all products
        filterPopup.style.display = "none"; // Hide popup after clearing filter
    });
    const list = document.createElement("div");
    list.classList = "list";
    const listProduct = document.createElement("ul");
    listProduct.className = "product-list";
    // Function to filter and update the product list based on search input
    const filterProducts = ()=>{
        const query = searchInput.value.toLowerCase();
        listProduct.innerHTML = ""; // Clear the list before updating
        const filteredProducts = products.filter((product)=>product.name.toLowerCase().includes(query));
        filteredProducts.forEach((product)=>{
            const listItem = document.createElement("li");
            listItem.textContent = `${product.name}`;
            listProduct.appendChild(listItem);
        });
    };
    // Function to filter products by brand
    const filterProductsByBrand = (brand)=>{
        listProduct.innerHTML = ""; // Clear the list before updating
        const filteredProducts = products.filter((product)=>product.brand.toLowerCase() === brand.toLowerCase());
        filteredProducts.forEach((product)=>{
            const listItem = document.createElement("li");
            listItem.textContent = `${product.name}`;
            listProduct.appendChild(listItem);
        });
    };
    // Initial population of the product list
    filterProducts();
    // Add event listener to search input for filtering products
    searchInput.addEventListener("input", filterProducts);
    // Toggle the popup when clicking the filter icon
    filterIcon.addEventListener("click", (e)=>{
        e.stopPropagation(); // Prevent click from propagating to document
        filterPopup.style.display = filterPopup.style.display === "none" ? "block" : "none";
    });
    // Hide the popup when clicking outside
    document.addEventListener("click", ()=>{
        filterPopup.style.display = "none";
    });
    // Prevent closing the popup when clicking inside
    filterPopup.addEventListener("click", (e)=>{
        e.stopPropagation();
    });
    searchProduct.append(search);
    search.appendChild(searchInput);
    search.appendChild(filterIcon);
    searchProduct.appendChild(list);
    // Append filterPopup to search after appending filterIcon
    search.appendChild(filterPopup);
    list.append(listProduct);
    return searchProduct;
};


/***/ }),

/***/ "?4f7e":
/*!********************************!*\
  !*** ./util.inspect (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ })

}]);
//# sourceMappingURL=SearchProduct-stories.iframe.bundle.js.map